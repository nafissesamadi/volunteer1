# Generated by Django 4.2.9 on 2024-01-29 21:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0005_profile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AvailableTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/courses')),
                ('code', models.CharField(blank=True, max_length=7, null=True)),
                ('book_download_link', models.CharField(blank=True, max_length=300, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('slug', models.SlugField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EducationalLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edu_level', models.CharField(max_length=20, unique=True, verbose_name='دوره آموزشی')),
                ('url_title', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('major', models.CharField(max_length=20, unique=True)),
                ('url_title', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.CharField(max_length=500)),
                ('is_active', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, max_length=500, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SkillType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='VenueType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WeekDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SkilledVolunteer',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.profile')),
                ('education', models.CharField(blank=True, choices=[('UG', 'Under Graduate'), ('B', 'BACHELOR'), ('M', 'MASTER'), ('PHD', 'PHD')], max_length=10, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married')], max_length=50, null=True)),
                ('birth_date', models.DateTimeField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('work_experience', models.IntegerField(blank=True, null=True)),
                ('bio', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('rating', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('slug', models.SlugField(default='')),
                ('job_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.job')),
                ('offered_skill', models.ManyToManyField(to='application.skill')),
            ],
            options={
                'abstract': False,
            },
            bases=('account.profile',),
        ),
        migrations.AddField(
            model_name='skill',
            name='skill_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.skilltype'),
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('educational_district', models.IntegerField(blank=True, null=True)),
                ('short_description', models.TextField(blank=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.city')),
                ('director', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.province')),
                ('school_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.educationallevel')),
                ('school_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.schooltype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_name', models.CharField(max_length=20, verbose_name='پایه تحصیلی')),
                ('url_title', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('edu_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.educationallevel')),
            ],
        ),
        migrations.CreateModel(
            name='EducationalVolunteer',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.profile')),
                ('education', models.CharField(blank=True, choices=[('UG', 'Under Graduate'), ('B', 'BACHELOR'), ('M', 'MASTER'), ('PHD', 'PHD')], max_length=10, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married')], max_length=50, null=True)),
                ('birth_date', models.DateTimeField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('work_experience', models.IntegerField(blank=True, null=True)),
                ('bio', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('rating', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('slug', models.SlugField(blank=True, default='', null=True)),
                ('edu_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.educationallevel', verbose_name='Preferred Level')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.grade', verbose_name='Preferred Grade')),
                ('job_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.job')),
                ('major', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.major', verbose_name='Preferred Major')),
                ('offered_course', models.ManyToManyField(to='application.course')),
            ],
            options={
                'abstract': False,
            },
            bases=('account.profile',),
        ),
        migrations.AddField(
            model_name='course',
            name='course_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.coursename'),
        ),
        migrations.AddField(
            model_name='course',
            name='grade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.grade'),
        ),
        migrations.AddField(
            model_name='course',
            name='major',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.major'),
        ),
        migrations.CreateModel(
            name='ClassVenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('short_description', models.TextField(blank=True, null=True)),
                ('available_time', models.ManyToManyField(to='application.availabletime')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.city')),
                ('director', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.province')),
                ('venue_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.venuetype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='availabletime',
            name='day_name',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='application.weekday'),
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_style', models.CharField(blank=True, choices=[('V', 'مجازی'), ('FTF', 'حضوری')], max_length=50, null=True)),
                ('short_description', models.CharField(blank=True, max_length=300, null=True)),
                ('is_accepted', models.BooleanField(blank=True, default=False, null=True)),
                ('rating', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('registered_date', models.DateField(auto_now_add=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('slug', models.SlugField(default='', max_length=200)),
                ('applicant', models.ManyToManyField(to='account.profile')),
                ('demanded_course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.course')),
                ('demandend_time', models.ManyToManyField(to='application.availabletime')),
                ('demandend_venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.classvenue')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicantStudent',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.profile')),
                ('birth_date', models.DateTimeField(blank=True, null=True)),
                ('nationality', models.CharField(choices=[('IR', 'ایرانی'), ('F', 'اتباع')], max_length=300)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('is_worker', models.BooleanField(default=False)),
                ('special_condition', models.CharField(blank=True, max_length=10, null=True)),
                ('rating', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('slug', models.SlugField(default='')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.grade')),
                ('major', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.major')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.school')),
            ],
            bases=('account.profile',),
        ),
        migrations.CreateModel(
            name='AcceptedApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='application.application')),
                ('class_venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.classvenue')),
                ('edu_volunteer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='application.educationalvolunteer')),
                ('holding_time', models.ManyToManyField(to='application.availabletime')),
            ],
        ),
        migrations.AddConstraint(
            model_name='grade',
            constraint=models.UniqueConstraint(fields=('edu_level', 'grade_name'), name='unique_edu_level_grade'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.UniqueConstraint(fields=('course_name', 'grade', 'major'), name='unique_course_name_edu_level_grade'),
        ),
        migrations.AddConstraint(
            model_name='availabletime',
            constraint=models.UniqueConstraint(fields=('day_name', 'time_name'), name='unique_day_name_time_name'),
        ),
    ]
